//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.PhoneAuthFederation"/> </summary
    public sealed class PhoneAuthFederationClient : MicroserviceClient, Beamable.Common.IHaveServiceName, Beamable.Common.ISupportsFederatedLogin<PhoneNumberIdentity>
    {
        
        public PhoneAuthFederationClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "PhoneAuthFederation";
            }
        }
        
        /// <summary>
        /// Call the SendMessage method on the PhoneAuthFederation microservice
        /// <see cref="Beamable.Microservices.PhoneAuthFederation.SendMessage"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> SendMessage(string phoneNumber, string body)
        {
            object raw_phoneNumber = phoneNumber;
            object raw_body = body;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("phoneNumber", raw_phoneNumber);
            serializedFields.Add("body", raw_body);
            return this.Request<Beamable.Common.Unit>("PhoneAuthFederation", "SendMessage", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersPhoneAuthFederationClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForPhoneAuthFederationClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<PhoneAuthFederationClient>();
        }
        
        public static PhoneAuthFederationClient PhoneAuthFederation(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<PhoneAuthFederationClient>();
        }
    }
}
